/// <reference types="react" />
import type { ImageStyle, TextStyle, ViewStyle } from "react-native";
/**
 * Module filter options
 */
declare type FilterOptions = {
    exports?: boolean;
    default?: false;
} | {
    exports?: true;
    default?: true;
};
/**
 * Find a Discord Module
 * @param filter Module filter
 * @param options Options.
 * @returns Module if found, else null
 */
export declare function getModule(filter: (module: any) => boolean, options?: FilterOptions): any;
declare type PropIntellisense<P extends string> = Record<P, any> & Record<PropertyKey, any>;
/**
 * Find a module by props
 * @param props One or more props
 */
export declare function getByProps<T extends string>(...props: T[]): PropIntellisense<T>;
export declare function getByProps<T extends string>(...options: [...props: T[], options: FilterOptions]): PropIntellisense<T>;
export declare function getByProps<T extends string>(...options: [...props: T[], defaultExport: boolean]): PropIntellisense<T>;
/**
 * Find a module by its displayName property. Usually useful for finding React Components
 * @returns Module if found, else null
 */
export declare function getByDisplayName(displayName: string, options?: FilterOptions): any;
/**
 * Find a Store by its name.
 * @returns Module if found, else null
 */
export declare function getByStoreName(storeName: string, options?: FilterOptions): any;
/**
 * Get a module by its numeric id. Unless you know what you're doing, you
 * should not use this.
 */
export declare const getById: (moduleId: number) => any;
/**
 * Same as getModule, but retrieves all matches instead of the first
 * @returns Array of modules
 */
export declare function getAll(filter: (module: any) => boolean, options?: FilterOptions): any[];
/**
 * Same as getByProps, but retrieves all matches instead of the first
 * @returns Array of modules
 */
export declare function getAllByProps<T extends string>(...props: T[]): PropIntellisense<T>[];
export declare function getAllByProps<T extends string>(...options: [...props: T[], options: FilterOptions]): PropIntellisense<T>[];
export declare function getAllByProps<T extends string>(...options: [...props: T[], defaultExport: boolean]): PropIntellisense<T>[];
/**
 * Find all modules with properties containing the specified keyword
 * @param keyword They keyword
 * @param skipConstants Whether constants (names that are FULL_CAPS) should be skipped. Defaults to true
 * @returns Array of names that match. You can then access moduleSearchResults.SomeName to view the
 *          corresponding module
 */
export declare function searchByKeyword(keyword: string, skipConstants?: boolean): string[];
export declare const UserStore: any;
export declare const GuildStore: any;
export declare const ChannelStore: any;
export declare const MessageStore: any;
export declare const GuildMemberStore: any;
export declare const SelectedChannelStore: any;
export declare const ModalActions: PropIntellisense<"closeModal">;
export declare const MessageActions: PropIntellisense<"sendMessage" | "receiveMessage">;
export declare const FluxDispatcher: PropIntellisense<"dirtyDispatch">;
export declare const FetchUserActions: PropIntellisense<"fetchProfile">;
export declare const ContextMenuActions: PropIntellisense<"openContextMenu">;
export declare const Clipboard: {
    getString(): Promise<string>;
    setString(str: string): Promise<void>;
};
export declare const RestAPI: PropIntellisense<"getAPIBaseURL" | "get">;
export declare const i18n: PropIntellisense<"Messages">;
export declare const Flux: PropIntellisense<"connectStores">;
export declare const React: typeof import("react");
export declare const ReactNative: typeof import("react-native");
export declare const Constants: import("./constants").default;
export declare const URLOpener: PropIntellisense<"openURL" | "handleSupportedURL">;
export declare const Forms: PropIntellisense<"FormSection">;
declare type Style = ViewStyle & ImageStyle & TextStyle;
declare type Styles = Partial<{
    [key in keyof Style]: readonly [Style[key], Style[key]] | Style[key];
}>;
declare type FlattenValue<T> = {
    [key in keyof T]: T[key] extends ReadonlyArray<infer E> ? E : T[key];
};
export declare const Styles: {
    ThemeColorMap: Record<string, [string, string]>;
    createThemedStyleSheet: <T extends {
        [key: string]: Partial<{
            backfaceVisibility?: "hidden" | "visible" | readonly ["hidden" | "visible" | undefined, "hidden" | "visible" | undefined] | undefined;
            backgroundColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderBottomColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderBottomEndRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomLeftRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomRightRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomStartRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderEndColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderLeftColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderLeftWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderRightColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderRightWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderStartColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderStyle?: "dashed" | "dotted" | "solid" | readonly ["dashed" | "dotted" | "solid" | undefined, "dashed" | "dotted" | "solid" | undefined] | undefined;
            borderTopColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderTopEndRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopLeftRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopRightRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopStartRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            opacity?: number | readonly [number | undefined, number | undefined] | undefined;
            testID?: string | readonly [string | undefined, string | undefined] | undefined;
            elevation?: number | readonly [number | undefined, number | undefined] | undefined;
            alignContent?: "space-around" | "space-between" | "stretch" | "center" | "flex-end" | "flex-start" | readonly ["space-around" | "space-between" | "stretch" | "center" | "flex-end" | "flex-start" | undefined, "space-around" | "space-between" | "stretch" | "center" | "flex-end" | "flex-start" | undefined] | undefined;
            alignItems?: import("react-native").FlexAlignType | readonly [import("react-native").FlexAlignType | undefined, import("react-native").FlexAlignType | undefined] | undefined;
            alignSelf?: "auto" | import("react-native").FlexAlignType | readonly ["auto" | import("react-native").FlexAlignType | undefined, "auto" | import("react-native").FlexAlignType | undefined] | undefined;
            aspectRatio?: number | readonly [number | undefined, number | undefined] | undefined;
            borderEndWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            borderStartWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            bottom?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            display?: "none" | "flex" | readonly ["none" | "flex" | undefined, "none" | "flex" | undefined] | undefined;
            end?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            flex?: number | readonly [number | undefined, number | undefined] | undefined;
            flexBasis?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            flexDirection?: "column" | "column-reverse" | "row" | "row-reverse" | readonly ["column" | "column-reverse" | "row" | "row-reverse" | undefined, "column" | "column-reverse" | "row" | "row-reverse" | undefined] | undefined;
            flexGrow?: number | readonly [number | undefined, number | undefined] | undefined;
            flexShrink?: number | readonly [number | undefined, number | undefined] | undefined;
            flexWrap?: "nowrap" | "wrap" | "wrap-reverse" | readonly ["nowrap" | "wrap" | "wrap-reverse" | undefined, "nowrap" | "wrap" | "wrap-reverse" | undefined] | undefined;
            height?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            justifyContent?: "space-around" | "space-between" | "space-evenly" | "center" | "flex-end" | "flex-start" | readonly ["space-around" | "space-between" | "space-evenly" | "center" | "flex-end" | "flex-start" | undefined, "space-around" | "space-between" | "space-evenly" | "center" | "flex-end" | "flex-start" | undefined] | undefined;
            left?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            margin?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginBottom?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginEnd?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginHorizontal?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginLeft?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginRight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginStart?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginTop?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginVertical?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            maxHeight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            maxWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            minHeight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            minWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            overflow?: "hidden" | "visible" | readonly ["hidden" | "visible" | undefined, "hidden" | "visible" | undefined] | undefined;
            padding?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingBottom?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingEnd?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingHorizontal?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingLeft?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingRight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingStart?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingTop?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingVertical?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            position?: "absolute" | "relative" | readonly ["absolute" | "relative" | undefined, "absolute" | "relative" | undefined] | undefined;
            right?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            start?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            top?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            width?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            zIndex?: number | readonly [number | undefined, number | undefined] | undefined;
            direction?: "inherit" | "ltr" | "rtl" | readonly ["inherit" | "ltr" | "rtl" | undefined, "inherit" | "ltr" | "rtl" | undefined] | undefined;
            shadowColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            shadowOffset?: {
                width: number;
                height: number;
            } | readonly [{
                width: number;
                height: number;
            } | undefined, {
                width: number;
                height: number;
            } | undefined] | undefined;
            shadowOpacity?: number | readonly [number | undefined, number | undefined] | undefined;
            shadowRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            transform?: (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | readonly [(import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined, (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined] | undefined;
            transformMatrix?: number[] | readonly [number[] | undefined, number[] | undefined] | undefined;
            rotation?: number | readonly [number | undefined, number | undefined] | undefined;
            scaleX?: number | readonly [number | undefined, number | undefined] | undefined;
            scaleY?: number | readonly [number | undefined, number | undefined] | undefined;
            translateX?: number | readonly [number | undefined, number | undefined] | undefined;
            translateY?: number | readonly [number | undefined, number | undefined] | undefined;
            resizeMode?: import("react-native").ImageResizeMode | readonly [import("react-native").ImageResizeMode | undefined, import("react-native").ImageResizeMode | undefined] | undefined;
            overlayColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            tintColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            color?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            fontFamily?: string | readonly [string | undefined, string | undefined] | undefined;
            fontSize?: number | readonly [number | undefined, number | undefined] | undefined;
            fontStyle?: "normal" | "italic" | readonly ["normal" | "italic" | undefined, "normal" | "italic" | undefined] | undefined;
            fontWeight?: "bold" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | readonly ["bold" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined, "bold" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined] | undefined;
            letterSpacing?: number | readonly [number | undefined, number | undefined] | undefined;
            lineHeight?: number | readonly [number | undefined, number | undefined] | undefined;
            textAlign?: "auto" | "center" | "left" | "right" | "justify" | readonly ["auto" | "center" | "left" | "right" | "justify" | undefined, "auto" | "center" | "left" | "right" | "justify" | undefined] | undefined;
            textDecorationLine?: "none" | "line-through" | "underline" | "underline line-through" | readonly ["none" | "line-through" | "underline" | "underline line-through" | undefined, "none" | "line-through" | "underline" | "underline line-through" | undefined] | undefined;
            textDecorationStyle?: "dashed" | "dotted" | "double" | "solid" | readonly ["dashed" | "dotted" | "double" | "solid" | undefined, "dashed" | "dotted" | "double" | "solid" | undefined] | undefined;
            textDecorationColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            textShadowColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            textShadowOffset?: {
                width: number;
                height: number;
            } | readonly [{
                width: number;
                height: number;
            } | undefined, {
                width: number;
                height: number;
            } | undefined] | undefined;
            textShadowRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            textTransform?: "none" | "capitalize" | "lowercase" | "uppercase" | readonly ["none" | "capitalize" | "lowercase" | "uppercase" | undefined, "none" | "capitalize" | "lowercase" | "uppercase" | undefined] | undefined;
            fontVariant?: import("react-native").FontVariant[] | readonly [import("react-native").FontVariant[] | undefined, import("react-native").FontVariant[] | undefined] | undefined;
            writingDirection?: "auto" | "ltr" | "rtl" | readonly ["auto" | "ltr" | "rtl" | undefined, "auto" | "ltr" | "rtl" | undefined] | undefined;
            textAlignVertical?: "auto" | "center" | "bottom" | "top" | readonly ["auto" | "center" | "bottom" | "top" | undefined, "auto" | "center" | "bottom" | "top" | undefined] | undefined;
            includeFontPadding?: boolean | readonly [boolean | undefined, boolean | undefined] | undefined;
        }>;
    }>(styles: T) => { [key in keyof T]: FlattenValue<T[key]>; };
    getThemedStylesheet: <T_1 extends {
        [key: string]: Partial<{
            backfaceVisibility?: "hidden" | "visible" | readonly ["hidden" | "visible" | undefined, "hidden" | "visible" | undefined] | undefined;
            backgroundColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderBottomColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderBottomEndRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomLeftRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomRightRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomStartRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderBottomWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderEndColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderLeftColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderLeftWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderRightColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderRightWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderStartColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderStyle?: "dashed" | "dotted" | "solid" | readonly ["dashed" | "dotted" | "solid" | undefined, "dashed" | "dotted" | "solid" | undefined] | undefined;
            borderTopColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            borderTopEndRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopLeftRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopRightRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopStartRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            borderTopWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            borderWidth?: number | readonly [number | undefined, number | undefined] | undefined;
            opacity?: number | readonly [number | undefined, number | undefined] | undefined;
            testID?: string | readonly [string | undefined, string | undefined] | undefined;
            elevation?: number | readonly [number | undefined, number | undefined] | undefined;
            alignContent?: "space-around" | "space-between" | "stretch" | "center" | "flex-end" | "flex-start" | readonly ["space-around" | "space-between" | "stretch" | "center" | "flex-end" | "flex-start" | undefined, "space-around" | "space-between" | "stretch" | "center" | "flex-end" | "flex-start" | undefined] | undefined;
            alignItems?: import("react-native").FlexAlignType | readonly [import("react-native").FlexAlignType | undefined, import("react-native").FlexAlignType | undefined] | undefined;
            alignSelf?: "auto" | import("react-native").FlexAlignType | readonly ["auto" | import("react-native").FlexAlignType | undefined, "auto" | import("react-native").FlexAlignType | undefined] | undefined;
            aspectRatio?: number | readonly [number | undefined, number | undefined] | undefined;
            borderEndWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            borderStartWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            bottom?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            display?: "none" | "flex" | readonly ["none" | "flex" | undefined, "none" | "flex" | undefined] | undefined;
            end?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            flex?: number | readonly [number | undefined, number | undefined] | undefined;
            flexBasis?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            flexDirection?: "column" | "column-reverse" | "row" | "row-reverse" | readonly ["column" | "column-reverse" | "row" | "row-reverse" | undefined, "column" | "column-reverse" | "row" | "row-reverse" | undefined] | undefined;
            flexGrow?: number | readonly [number | undefined, number | undefined] | undefined;
            flexShrink?: number | readonly [number | undefined, number | undefined] | undefined;
            flexWrap?: "nowrap" | "wrap" | "wrap-reverse" | readonly ["nowrap" | "wrap" | "wrap-reverse" | undefined, "nowrap" | "wrap" | "wrap-reverse" | undefined] | undefined;
            height?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            justifyContent?: "space-around" | "space-between" | "space-evenly" | "center" | "flex-end" | "flex-start" | readonly ["space-around" | "space-between" | "space-evenly" | "center" | "flex-end" | "flex-start" | undefined, "space-around" | "space-between" | "space-evenly" | "center" | "flex-end" | "flex-start" | undefined] | undefined;
            left?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            margin?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginBottom?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginEnd?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginHorizontal?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginLeft?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginRight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginStart?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginTop?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            marginVertical?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            maxHeight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            maxWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            minHeight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            minWidth?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            overflow?: "hidden" | "visible" | readonly ["hidden" | "visible" | undefined, "hidden" | "visible" | undefined] | undefined;
            padding?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingBottom?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingEnd?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingHorizontal?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingLeft?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingRight?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingStart?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingTop?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            paddingVertical?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            position?: "absolute" | "relative" | readonly ["absolute" | "relative" | undefined, "absolute" | "relative" | undefined] | undefined;
            right?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            start?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            top?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            width?: string | number | readonly [string | number | undefined, string | number | undefined] | undefined;
            zIndex?: number | readonly [number | undefined, number | undefined] | undefined;
            direction?: "inherit" | "ltr" | "rtl" | readonly ["inherit" | "ltr" | "rtl" | undefined, "inherit" | "ltr" | "rtl" | undefined] | undefined;
            shadowColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            shadowOffset?: {
                width: number;
                height: number;
            } | readonly [{
                width: number;
                height: number;
            } | undefined, {
                width: number;
                height: number;
            } | undefined] | undefined;
            shadowOpacity?: number | readonly [number | undefined, number | undefined] | undefined;
            shadowRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            transform?: (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | readonly [(import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined, (import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | import("react-native").ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | import("react-native").TranslateXTransform | import("react-native").TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform)[] | undefined] | undefined;
            transformMatrix?: number[] | readonly [number[] | undefined, number[] | undefined] | undefined;
            rotation?: number | readonly [number | undefined, number | undefined] | undefined;
            scaleX?: number | readonly [number | undefined, number | undefined] | undefined;
            scaleY?: number | readonly [number | undefined, number | undefined] | undefined;
            translateX?: number | readonly [number | undefined, number | undefined] | undefined;
            translateY?: number | readonly [number | undefined, number | undefined] | undefined;
            resizeMode?: import("react-native").ImageResizeMode | readonly [import("react-native").ImageResizeMode | undefined, import("react-native").ImageResizeMode | undefined] | undefined;
            overlayColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            tintColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            color?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            fontFamily?: string | readonly [string | undefined, string | undefined] | undefined;
            fontSize?: number | readonly [number | undefined, number | undefined] | undefined;
            fontStyle?: "normal" | "italic" | readonly ["normal" | "italic" | undefined, "normal" | "italic" | undefined] | undefined;
            fontWeight?: "bold" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | readonly ["bold" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined, "bold" | "normal" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900" | undefined] | undefined;
            letterSpacing?: number | readonly [number | undefined, number | undefined] | undefined;
            lineHeight?: number | readonly [number | undefined, number | undefined] | undefined;
            textAlign?: "auto" | "center" | "left" | "right" | "justify" | readonly ["auto" | "center" | "left" | "right" | "justify" | undefined, "auto" | "center" | "left" | "right" | "justify" | undefined] | undefined;
            textDecorationLine?: "none" | "line-through" | "underline" | "underline line-through" | readonly ["none" | "line-through" | "underline" | "underline line-through" | undefined, "none" | "line-through" | "underline" | "underline line-through" | undefined] | undefined;
            textDecorationStyle?: "dashed" | "dotted" | "double" | "solid" | readonly ["dashed" | "dotted" | "double" | "solid" | undefined, "dashed" | "dotted" | "double" | "solid" | undefined] | undefined;
            textDecorationColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            textShadowColor?: import("react-native").ColorValue | readonly [import("react-native").ColorValue | undefined, import("react-native").ColorValue | undefined] | undefined;
            textShadowOffset?: {
                width: number;
                height: number;
            } | readonly [{
                width: number;
                height: number;
            } | undefined, {
                width: number;
                height: number;
            } | undefined] | undefined;
            textShadowRadius?: number | readonly [number | undefined, number | undefined] | undefined;
            textTransform?: "none" | "capitalize" | "lowercase" | "uppercase" | readonly ["none" | "capitalize" | "lowercase" | "uppercase" | undefined, "none" | "capitalize" | "lowercase" | "uppercase" | undefined] | undefined;
            fontVariant?: import("react-native").FontVariant[] | readonly [import("react-native").FontVariant[] | undefined, import("react-native").FontVariant[] | undefined] | undefined;
            writingDirection?: "auto" | "ltr" | "rtl" | readonly ["auto" | "ltr" | "rtl" | undefined, "auto" | "ltr" | "rtl" | undefined] | undefined;
            textAlignVertical?: "auto" | "center" | "bottom" | "top" | readonly ["auto" | "center" | "bottom" | "top" | undefined, "auto" | "center" | "bottom" | "top" | undefined] | undefined;
            includeFontPadding?: boolean | readonly [boolean | undefined, boolean | undefined] | undefined;
        }>;
    }>(styles: T_1) => Record<"mergedDarkStyles" | "mergedLightStyles", { [key_1 in keyof T_1]: FlattenValue<T_1[key_1]>; }>;
};
export {};
