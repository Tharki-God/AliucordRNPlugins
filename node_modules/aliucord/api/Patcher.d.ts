import { AfterPatchFn, BeforePatchFn, InsteadFn, PatchPriority, Unpatch } from "../utils/patcher";
export declare class Patcher {
    readonly plugin: string;
    private readonly _unpatches;
    constructor(plugin: string);
    before<T, R, A extends any[]>(object: T, name: string, fn: BeforePatchFn<T, R, A>, priority?: PatchPriority): Unpatch;
    instead<T, R, A extends any[]>(object: T, name: string, fn: InsteadFn<T, R, A>, priority?: PatchPriority): Unpatch;
    insteadDoNothing(object: any, name: string): Unpatch;
    after<T, R, A extends any[]>(object: T, name: string, fn: AfterPatchFn<T, R, A>, priority?: PatchPriority): Unpatch;
    unpatchAll(): void;
}
